#!/usr/bin/env bash
set -Eeuo pipefail
: "${REX_SRC:?missing REX_SRC}"
source "$REX_SRC/lib/util.sh"
source "$REX_SRC/lib/updater.sh"
cmd="${1:-help}"; shift || true

case "$cmd" in
  init)          rex_self_update; source "$REX_SRC/lib/init.sh";          rex_cmd_init "$@" ;;
  generator)     rex_self_update; source "$REX_SRC/lib/generator.sh";     rex_cmd_generator "$@" ;;
  discriminator) rex_self_update; source "$REX_SRC/lib/discriminator.sh"; rex_cmd_discriminator "$@" ;;
  loop)          rex_self_update; source "$REX_SRC/lib/loop.sh";          rex_cmd_loop "$@" ;;
  feature)       rex_self_update; source "$REX_SRC/lib/generator.sh";     echo "[info] 'feature' is deprecated; use 'generator'"; rex_cmd_generator "$@" ;;
  supervise)     rex_self_update; source "$REX_SRC/lib/loop.sh";          rex_cmd_loop "$@" ;;
  burn)          rex_self_update; source "$REX_SRC/lib/burn.sh";          rex_cmd_burn "$@" ;;
  self-update)   rex_self_update ;;
  doctor)        rex_repo_doctor ;;
  help|*)        cat <<'H'
Usage: rex-codex <command>
  init           Seed AGENTS.md, enforcement tests, Feature Cards, and .venv
  generator      Iterate on tests for the next `status: proposed` Feature Card (single-pass: --single-pass)
  discriminator  Run the staged automation ladder (mechanical fixes â†’ Codex) until green
  loop           Generator then discriminator (forward args to generator after `--`)
  burn           Delete repo contents (preserves .git, the wrapper, and by default .rex_agent)
  doctor         Print versions and environment status
  self-update    Pull latest agent into .rex_agent/src
H
  ;;
esac
